using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.Runtime.Serialization;

namespace Uralstech.UGemini.Models.Generation.Candidate
{
    /// <summary>
    /// Defines the reason why the model stopped generating tokens.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum GeminiFinishReason
    {
        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        [EnumMember(Value = "FINISH_REASON_UNSPECIFIED")]
        Unspecified,

        /// <summary>
        /// Natural stop point of the model or provided stop sequence.
        /// </summary>
        [EnumMember(Value = "STOP")]
        Stop,

        /// <summary>
        /// The maximum number of tokens as specified in the request was reached.
        /// </summary>
        [EnumMember(Value = "MAX_TOKENS")]
        MaxTokens,

        /// <summary>
        /// The candidate content was flagged for safety reasons.
        /// </summary>
        [EnumMember(Value = "SAFETY")]
        Safety,

        /// <summary>
        /// The candidate content was flagged for recitation reasons.
        /// </summary>
        [EnumMember(Value = "RECITATION")]
        Recitation,

        /// <summary>
        /// The response candidate content was flagged for using an unsupported language.
        /// </summary>
        [EnumMember(Value = "LANGUAGE")]
        Language,

        /// <summary>
        /// Unknown reason.
        /// </summary>
        [EnumMember(Value = "OTHER")]
        Other,

        /// <summary>
        /// Token generation stopped because the content contains forbidden terms.
        /// </summary>
        [EnumMember(Value = "BLOCKLIST")]
        BlockList,

        /// <summary>
        /// Token generation stopped for potentially containing prohibited content.
        /// </summary>
        [EnumMember(Value = "PROHIBITED_CONTENT")]
        ProhibitedContent,

        /// <summary>
        /// Token generation stopped because the content potentially contains Sensitive Personally Identifiable Information (SPII).
        /// </summary>
        [EnumMember(Value = "SPII")]
        SPII,

        /// <summary>
        /// The function call generated by the model is invalid.
        /// </summary>
        [EnumMember(Value = "MALFORMED_FUNCTION_CALL")]
        MalformedFunctionCall,
    }
}